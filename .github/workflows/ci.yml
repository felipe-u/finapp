name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: finapp-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: finapp-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install Google Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Run frontend tests
        run: npm test

  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs:
      - test-backend
      - test-frontend
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm ci
        working-directory: finapp-frontend

      - name: Generate frontend coverage
        run: npm run test -- --code-coverage --watch=false --browsers=ChromeHeadless
        working-directory: finapp-frontend

      - name: Install backend dependencies
        run: npm ci
        working-directory: finapp-backend

      - name: Generate backend coverage
        run: npm run coverage
        working-directory: finapp-backend

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.organization=felipe-u
            -Dsonar.projectKey=felipe-u_finapp
            -Dsonar.javascript.lcov.reportPaths=finapp-frontend/coverage/lcov.info,finapp-backend/coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    needs:
      - test-backend
      - test-frontend
    if: success()
    steps:
      - name: Deploy to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
